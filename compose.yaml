x-customizable-image: &customizable_image  # By default the image used only contains the `frappe` and `erpnext` apps.  # See https://github.com/frappe/frappe_docker/blob/main/docs/custom-apps.md  # about using custom images.  image: ${CUSTOM_IMAGE:-frappe/erpnext}:${CUSTOM_TAG:-$ERPNEXT_VERSION}  pull_policy: ${PULL_POLICY:-always}  restart: ${RESTART_POLICY:-unless-stopped}x-depends-on-configurator: &depends_on_configurator  depends_on:    configurator:      condition: service_completed_successfullyx-backend-defaults: &backend_defaults  <<: [*depends_on_configurator, *customizable_image]  volumes:    - sites:/home/frappe/frappe-bench/sitesservices:  configurator:    <<: *backend_defaults    platform: linux/amd64    entrypoint:      - bash      - -c    # add redis_socketio for backward compatibility    command:      - >        ls -1 apps > sites/apps.txt;        bench set-config -g db_host $$DB_HOST;        bench set-config -gp db_port $$DB_PORT;        bench set-config -g redis_cache "redis://$$REDIS_CACHE";        bench set-config -g redis_queue "redis://$$REDIS_QUEUE";        bench set-config -g redis_socketio "redis://$$REDIS_QUEUE";        bench set-config -gp socketio_port $$SOCKETIO_PORT;    environment:      DB_HOST: ${DB_HOST:-db}      DB_PORT: ${DB_PORT:-3306}      REDIS_CACHE: ${REDIS_CACHE:-}      REDIS_QUEUE: ${REDIS_QUEUE:-}      SOCKETIO_PORT: 9000    depends_on:      db:        condition: service_healthy    restart: on-failure  create-site:    image: ds5105119/frappe:latest    networks:      - frappe_network    deploy:      restart_policy:        condition: none    volumes:      - sites:/home/frappe/frappe-bench/sites      - logs:/home/frappe/frappe-bench/logs    entrypoint:      - bash      - -c    command:      - >        wait-for-it -t 120 db:3306;        wait-for-it -t 120 redis-cache:6379;        wait-for-it -t 120 redis-queue:6379;        export start=`date +%s`;        until [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".db_host // empty"` ]] && \          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_cache // empty"` ]] && \          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_queue // empty"` ]];        do          echo "Waiting for sites/common_site_config.json to be created";          sleep 5;          if (( `date +%s`-start > 120 )); then            echo "could not find sites/common_site_config.json with required keys";            exit 1          fi        done;        echo "sites/common_site_config.json found";        bench new-site "${SITES:-default}" \          --mariadb-user-host-login-scope='%' \          --admin-password=admin \          --db-root-username="${DB_ROOT_USERNAME:-root}" \          --db-root-password="${DB_PASSWORD:-admin}" \          --install-app "erpnext" \          --install-app "payments" \          --install-app "hrms" \          --set-default    depends_on:      configurator:        condition: service_completed_successfully  backend:    <<: *backend_defaults    platform: linux/amd64  frontend:    <<: *customizable_image    platform: linux/amd64    command:      - nginx-entrypoint.sh    environment:      BACKEND: backend:8000      SOCKETIO: websocket:9000      FRAPPE_SITE_NAME_HEADER: ${FRAPPE_SITE_NAME_HEADER:-$$host}      UPSTREAM_REAL_IP_ADDRESS: ${UPSTREAM_REAL_IP_ADDRESS:-127.0.0.1}      UPSTREAM_REAL_IP_HEADER: ${UPSTREAM_REAL_IP_HEADER:-X-Forwarded-For}      UPSTREAM_REAL_IP_RECURSIVE: ${UPSTREAM_REAL_IP_RECURSIVE:-off}      PROXY_READ_TIMEOUT: ${PROXY_READ_TIMEOUT:-120}      CLIENT_MAX_BODY_SIZE: ${CLIENT_MAX_BODY_SIZE:-50m}    volumes:      - sites:/home/frappe/frappe-bench/sites    depends_on:      - backend      - websocket  websocket:    <<: [*depends_on_configurator, *customizable_image]    platform: linux/amd64    command:      - node      - /home/frappe/frappe-bench/apps/frappe/socketio.js    volumes:      - sites:/home/frappe/frappe-bench/sites  queue-short:    <<: *backend_defaults    platform: linux/amd64    command: bench worker --queue short,default  queue-long:    <<: *backend_defaults    platform: linux/amd64    command: bench worker --queue long,default,short  scheduler:    <<: *backend_defaults    platform: linux/amd64    command: bench schedule  db:    image: mariadb:lts    healthcheck:      test: ["CMD", "/usr/local/bin/healthcheck.sh" ,"--innodb_initialized"]      start_period: 300s      interval: 10s      timeout: 5s      retries: 5    restart: unless-stopped    command:      - --character-set-server=utf8mb4      - --collation-server=utf8mb4_unicode_ci      - --skip-character-set-client-handshake    environment:      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:?No db password set}    volumes:      - db-data:/var/lib/mysql# ERPNext requires local assets access (Frappe does not)volumes:  sites:  db-data:  logs: