x-customizable-image: &customizable_image  # By default the image used only contains the `frappe` and `erpnext` apps.  # See https://github.com/frappe/frappe_docker/blob/main/docs/custom-apps.md  # about using custom images.  image: ${CUSTOM_IMAGE:-frappe/erpnext}:${CUSTOM_TAG:-$ERPNEXT_VERSION}  pull_policy: ${PULL_POLICY:-always}  restart: ${RESTART_POLICY:-unless-stopped}x-depends-on-configurator: &depends_on_configurator  depends_on:    configurator:      condition: service_completed_successfullyx-backend-defaults: &backend_defaults  <<: [*depends_on_configurator, *customizable_image]  volumes:    - sites:/home/frappe/frappe-bench/sitesservices:  configurator:    <<: *backend_defaults    platform: linux/amd64    entrypoint:      - bash      - -c    labels:      - traefik.enable=true      - traefik.http.services.frontend.loadbalancer.server.port=8080      - traefik.http.routers.frontend-http.entrypoints=websecure      - traefik.http.routers.frontend-http.tls.certresolver=main-resolver      - traefik.http.routers.frontend-http.rule=Host('${SITES:?List of sites not set}')    command:      - >        ls -1 apps > sites/apps.txt;        bench set-config -g db_host $$DB_HOST;        bench set-config -gp db_port $$DB_PORT;        bench set-config -g redis_cache "redis://$$REDIS_CACHE";        bench set-config -g redis_queue "redis://$$REDIS_QUEUE";        bench set-config -g redis_socketio "redis://$$REDIS_QUEUE";        bench set-config -gp socketio_port $$SOCKETIO_PORT;    environment:      DB_HOST: ${DB_HOST:-db}      DB_PORT: ${DB_PORT:-3306}      REDIS_CACHE: ${REDIS_CACHE:-}      REDIS_QUEUE: ${REDIS_QUEUE:-}      SOCKETIO_PORT: 9000    depends_on:      db:        condition: service_healthy    restart: on-failure  backend:    <<: *backend_defaults    platform: linux/amd64  proxy:    image: traefik:v2.11    restart: unless-stopped    command:      - --providers.docker=true      - --providers.docker.exposedbydefault=false      - --entrypoints.web.address=:80      - --entrypoints.web.http.redirections.entrypoint.to=websecure      - --entrypoints.web.http.redirections.entrypoint.scheme=https      - --entrypoints.websecure.address=:443      - --certificatesResolvers.main-resolver.acme.httpChallenge=true      - --certificatesResolvers.main-resolver.acme.httpChallenge.entrypoint=web      - --certificatesResolvers.main-resolver.acme.email=${LETSENCRYPT_EMAIL:?No Let's Encrypt email set}      - --certificatesResolvers.main-resolver.acme.storage=/letsencrypt/acme.json      - --certificatesResolvers.main-resolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory    ports:      - ${HTTP_PUBLISH_PORT:-80}:80      - ${HTTPS_PUBLISH_PORT:-443}:443    volumes:      - cert-data:/letsencrypt      - /var/run/docker.sock:/var/run/docker.sock:ro  frontend:    <<: *customizable_image    platform: linux/amd64    command:      - nginx-entrypoint.sh    environment:      BACKEND: backend:8000      SOCKETIO: websocket:9000      FRAPPE_SITE_NAME_HEADER: ${FRAPPE_SITE_NAME_HEADER:-$$host}      UPSTREAM_REAL_IP_ADDRESS: ${UPSTREAM_REAL_IP_ADDRESS:-127.0.0.1}      UPSTREAM_REAL_IP_HEADER: ${UPSTREAM_REAL_IP_HEADER:-X-Forwarded-For}      UPSTREAM_REAL_IP_RECURSIVE: ${UPSTREAM_REAL_IP_RECURSIVE:-off}      PROXY_READ_TIMEOUT: ${PROXY_READ_TIMEOUT:-120}      CLIENT_MAX_BODY_SIZE: ${CLIENT_MAX_BODY_SIZE:-50m}    volumes:      - sites:/home/frappe/frappe-bench/sites    depends_on:      - backend      - websocket  websocket:    <<: [*depends_on_configurator, *customizable_image]    platform: linux/amd64    command:      - node      - /home/frappe/frappe-bench/apps/frappe/socketio.js    volumes:      - sites:/home/frappe/frappe-bench/sites  queue-short:    <<: *backend_defaults    platform: linux/amd64    command: bench worker --queue short,default  queue-long:    <<: *backend_defaults    platform: linux/amd64    command: bench worker --queue long,default,short  scheduler:    <<: *backend_defaults    platform: linux/amd64    command: bench schedule  db:    image: mariadb:lts    healthcheck:      test: ["CMD", "/usr/local/bin/healthcheck.sh" ,"--innodb_initialized"]      start_period: 300s      interval: 10s      timeout: 5s      retries: 5    restart: unless-stopped    command:      - --character-set-server=utf8mb4      - --collation-server=utf8mb4_unicode_ci      - --skip-character-set-client-handshake    environment:      MARIADB_ROOT_PASSWORD: ${DB_PASSWORD:-admin}    volumes:      - db-data:/var/lib/mysql# ERPNext requires local assets access (Frappe does not)volumes:  sites:  db-data:  cert-data:  logs: