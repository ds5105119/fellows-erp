name: Build and Push Frappe Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ds5105119/frappe
      FRAPPE_PATH: https://github.com/frappe/frappe
      FRAPPE_BRANCH: version-15

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check if apps.json or Dockerfile changed
        id: check_diff
        run: |
          echo "🔍 Fetching Git history..."
          git fetch origin main || true

          echo "🔍 Checking for parent commit..."
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            echo "✅ Found parent commit: HEAD^"
            DIFF=$(git diff --name-only HEAD^ HEAD)
          else
            echo "⚠️ No parent commit found. Using current HEAD only."
            DIFF=$(git diff --name-only HEAD)
          fi

          echo "📝 Changed files:"
          echo "$DIFF"

          echo "🔍 Checking if rebuild is needed..."

          if echo "$DIFF" | grep -qE '^apps\.json$|^frappe_docker/images/layered/Containerfile$|^compose\.ya?ml$|^\.github/actions/'; then
            echo "🛠️ Changes detected in critical files. Will trigger build."
            echo "needs_build=true" >> "$GITHUB_OUTPUT"
          else
            echo "✅ No critical changes detected. Skipping build."
            echo "needs_build=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Clone frappe_docker repository
        run: git clone https://github.com/frappe/frappe_docker.git

      - name: Set up Docker Build
        if: steps.check_diff.outputs.needs_build == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        if: steps.check_diff.outputs.needs_build == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Encode apps.json
        if: steps.check_diff.outputs.needs_build == 'true'
        id: encode_apps_json
        run: |
          echo "APPS_JSON_BASE64=$(base64 -w 0 ./apps.json)" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        if: steps.check_diff.outputs.needs_build == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: frappe_docker/images/layered/Containerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}
          build-args: |
            FRAPPE_PATH=${{ env.FRAPPE_PATH }}
            FRAPPE_BRANCH=${{ env.FRAPPE_BRANCH }}
            APPS_JSON_BASE64=${{ env.APPS_JSON_BASE64 }}

      - name: Set environment variables
        run: |
          echo "FRAPPE_VERSION='version-15'" >> .env
          echo "ERPNEXT_VERSION='latest'" >> .env
          echo "DB_PASSWORD='${{ secrets.DB_PASSWORD }}'" >> .env
          echo "LETSENCRYPT_EMAIL='${{ secrets.LETSENCRYPT_EMAIL }}'" >> .env
          echo "SITES='${{ secrets.SITES }}'" >> .env
          echo "CUSTOM_IMAGE='${{ env.IMAGE_NAME }}'" >> .env

      - name: Generate docker-compose.yaml
        run: |
          docker compose --env-file .env -f compose.yaml \
                                         -f frappe_docker/overrides/compose.https.yaml \
                                         -f frappe_docker/overrides/compose.redis.yaml \
                                         config > docker-compose.yaml

      - name: Copy docker-compose.yaml to GCP VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_SSH_KEY }}
          source: docker-compose.yaml
          target: ~/gitops/

      - name: Deploy on GCP VM via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_SSH_KEY }}
          script: |
            cd ~/gitops
            docker compose down
            nohup docker compose up -d > nohup.out 2>&1 &